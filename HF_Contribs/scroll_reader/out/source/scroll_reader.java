/* autogenerated by Processing revision 1286 on 2023-02-06 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class scroll_reader extends PApplet {

int f_no;
int i,j,k;


String st1 = null;
String st2 = null;

int base;
int hover;
int tempA,tempB;


button [][][] b = new button [4][2][2];

 public void setup() {
    /* size commented out by preprocessor */;
    f_no = 0;
    for (i=0; i<4; i++) {
        for (j=0; j<2; j++) {
            for(k=0;k<2;k++) {
                b[i][j][k]= new button(50+(k*100),100+(j*130));


            }
        }
    }
    hover = color(205);
    base = color(255);
    tempA = base;
    tempB = base;
}

 public void draw() {
    background(0);
    up_arrow_button(tempA);
    down_arrow_button(tempB);

    if (evaluate_up_arrow(mouseX,mouseY)) {

        tempA = hover;
        tempB = base;
    }
    else if (evaluate_down_arrow(mouseX,mouseY)) {
        tempA = base;
        tempB = hover;
    
    }
    else {
        tempA = base;
        tempB = base;
    }

    
        for (j=0; j<2; j++) {
            for(k=0;k<2;k++) {
                if(b[f_no][j][k].tog) {
                    b[f_no][j][k].update_button();
                    b[f_no][j][k].labels(f_no,j,k);

                }
                else {
                    b[f_no][j][k].display();
                    b[f_no][j][k].labels(f_no,j,k);
                }


            }
        }
    
    update_floor(f_no);
    show_floor_data(st1,st2);
}

 public void mousePressed() {
    if (dist(mouseX,mouseY,500,40)<=25) {
        f_no++;
        if (f_no>=3) {
            f_no = 3;
        }
    }
    else if (dist(mouseX,mouseY,500,100)<=25) {
        f_no--;
        if (f_no<0) {
            f_no = 0;
        }
    }

    for (i=0; i<4;i++) {
        for (j=0; j<2; j++) {
            for(k=0;k<2;k++) {
                if ((mouseX > b[i][j][k].x_cor) &&
                (mouseX <= (b[i][j][k].x_cor+b[i][j][k].wideX)) &&
                (mouseY > b[i][j][k].y_cor) &&
                (mouseY <= (b[i][j][k].y_cor+b[i][j][k].longY))) {
                    if (i == f_no) {
                        b[f_no][j][k].tog = !b[f_no][j][k].tog;
                    }
                    
                }


            }
        }
    }
}

 public void up_arrow_button(int c) {
    //the-ring
    strokeWeight(5);
    stroke(255, 0, 0);
    fill(c);
    ellipse(500, 40, 50, 50);
    //the arrow pointing up
    strokeWeight(8);
    stroke(255, 0, 0);
    line(490, 50, 500, 30);
    line(500, 30, 510, 50);

}
 public void down_arrow_button(int c) {
    //the-ring
    strokeWeight(5);
    stroke(255, 0, 0);
    fill(c);
    ellipse(500, 100, 50, 50);
    //the arrow pointing down
    strokeWeight(8);
    stroke(255, 0, 0);
    line(490, 90, 500, 110);
    line(500, 110, 510, 90);

}

 public void update_floor(int p) {
    if (p==0) {
        st1 = "GND";
        st2 = " OUT OF 3";
    }
    else if (p==1) {
        st1 = "1ST";
        st2 = " OUT OF 3";
    }
    else if (p==2) {
        st1 = "2ND";
        st2 = " OUT OF 3";
    }
    else if (p==3) {
        st1 = "3RD";
        st2 = " OUT OF 3";
    }
    else {
        st1 = "NO SUCH";
        st2 = " EXISTS";
    }



}

 public void show_floor_data(String k,String l) {

    textSize(28);
    text(k+" FLOOR"+ l,110,30);

}

 public boolean evaluate_up_arrow(int m,int n) {
    if (dist(m, n, 500, 40)<=25) {
        return true;
        
    }
    else {
        return false;
    }
}

 public boolean evaluate_down_arrow(int m,int n) {
    if(dist(m, n, 500, 100)<=25) {
        return true;
    }
    else {
        return false;
    }
}
class button {

    int x_cor;
    int y_cor;
    int wideX = 70;
    int longY = 100;
    boolean tog = false;
    

    button( int x_pla,int y_pla) {
        x_cor = x_pla;
        y_cor = y_pla;

    }

     public void display() {

        strokeWeight(8);
        stroke(255);
        fill(0, 255, 0); //green color
        rect(x_cor, y_cor, wideX, longY);
        //displays text "VACANT" when button is green
        fill(255,255,255);
        textSize(15);
        text("VACANT", x_cor+10, y_cor+10, 60, 35);
    }

     public void update_button() {

        strokeWeight(8);
        stroke(255);
        fill(255, 255, 0); //yellow color
        rect(x_cor, y_cor, wideX, longY);
        //displays text "BOOKED" when button is yellow
        fill(0);
        textSize(13);
        text("BOOKED", x_cor+10, y_cor+10, 50, 30);
    }

     public void labels(int k,int l,int m) {
        int q=0;
        q=l*2+m*1;
        textSize(16);
        fill(255);
        text("F"+k+"S"+q, x_cor+10, y_cor-10);
    }

}


  public void settings() { size(600, 400); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "scroll_reader" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
